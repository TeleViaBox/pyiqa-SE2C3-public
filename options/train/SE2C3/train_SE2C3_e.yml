# general settings
# name: debug_DBCNN_LIVEC
name: 001_SE2C3_LIVEC
model_type: SE2C3Model
# model_type: DBCNNModel
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 123
split_num: 10
save_final_results_path: './experiments/SE2C3_LIVEChallenge_10splits_results.txt'

# dataset and data loader settings
datasets:
  train:
    name: livechallenge
    type: LIVEChallengeDataset
    dataroot_target: ./datasets/LIVEC/
    meta_info_file: ./datasets/meta_info/meta_info_LIVEChallengeDataset.csv
    split_file: ./datasets/meta_info/livechallenge_seed123.pkl
    split_index: 2 # which split to use, start from 1

    augment:
      hflip: true
      random_crop: 448
    img_range: 1

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 8
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: livechallenge
    type: LIVEChallengeDataset
    dataroot_target: ./datasets/LIVEC
    meta_info_file: ./datasets/meta_info/meta_info_LIVEChallengeDataset.csv
    split_file: ./datasets/meta_info/livechallenge_seed123.pkl
    split_index: 2 # which split to use, start from 1

# # network structures
# network:
#   type: DBCNN
#   pretrained_scnn_path: none

network:
  type: SE2C3Net
  # type: DBCNN
  in_channels: 3
  num_classes: 1

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~
  auto_resume: true  # new added param to have the checkpoint auto_resume

# training settings
train:
  optim:
    type: 'Adam'
    # lr: 1e-4
    lr: 0.001
    weight_decay: 1e-4

  scheduler:
    type: 'MultiStepLR'
    milestones: [50000, 100000, 150000]
    gamma: 0.5

  cri_mos_opt:
    type: 'MSELoss'
  cri_metric_opt:
    type: 'PLCCLoss'

  total_iter: 200000
  val_freq: 1000
  save_checkpoint_freq: 5000

  # losses
  mos_loss_opt:
    type: MSELoss
    loss_weight: !!float 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 100
  save_img: false
  pbar: true

  key_metric: srcc # if this metric improve, update all metrics. If not specified, each best metric results will be updated separately
  metrics:
    srcc:
      type: calculate_srcc

    plcc:
      type: calculate_plcc

    krcc:
      type: calculate_krcc

# logging settings
logger:
  print_freq: 10
  save_checkpoint_freq: !!float 5e9
  save_latest_freq: !!float 5e2
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
